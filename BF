local gameOver = false
local playerName = game.Players.LocalPlayer.Name
local playerGui = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
local replicatedStorage = game:GetService("ReplicatedStorage")
local sharedModules = replicatedStorage:WaitForChild("SharedModules")
local knitService = sharedModules:WaitForChild("Knit"):WaitForChild("Services")
local gameOverOptionsService = knitService:WaitForChild("GameOverOptionsService")
local Webhook_URL = "https://discord.com/api/webhooks/1324050914562150410/8Nzx0YqIqxC_bcPVl-MXaM7C9C7T20QDarNU8Qz3FhzV7U6uUpniObG3Zm8ghVE_aUjl"
local HttpService = game:GetService("HttpService") -- Для работы с JSON (если требуется)
local player = game.Players.LocalPlayer
local countGame = 0

local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
end)

local function timer()
    local playerGui = player:WaitForChild("PlayerGui")

    -- Создаем GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = playerGui

    -- Создаем рамку для секундомера
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 200)  -- Увеличен размер для красоты
    frame.Position = UDim2.new(0.9, -150, 0.2, -100)
    frame.BackgroundColor3 = Color3.fromRGB(0, 102, 204)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    -- Добавляем плавные скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 16)
    corner.Parent = frame

    -- Добавляем текстовое поле для отображения времени
    local timeLabel = Instance.new("TextLabel")
    timeLabel.Size = UDim2.new(1, 0, 0.7, 0)
    timeLabel.Position = UDim2.new(0, 0, 0, 10)
    timeLabel.Text = "Time: 0s"
    timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    timeLabel.TextSize = 32
    timeLabel.TextStrokeTransparency = 0.5
    timeLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    timeLabel.TextXAlignment = Enum.TextXAlignment.Center -- Выравнивание по горизонтали
    timeLabel.TextYAlignment = Enum.TextYAlignment.Top    -- Выравнивание по вертикали
    timeLabel.BackgroundTransparency = 1
    timeLabel.Parent = frame

    -- Добавляем плавное увеличение текста при обновлении
    timeLabel:TweenSize(UDim2.new(1, 0, 0.7, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)

    -- Кнопка для вывода времени в консоль
    local logButton = Instance.new("TextButton")
    logButton.Size = UDim2.new(0, 200, 0, 50)
    logButton.Position = UDim2.new(0.5, -100, 0.75, -25)
    logButton.Text = "Log Current Time"
    logButton.TextSize = 18
    logButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    logButton.BackgroundColor3 = Color3.fromRGB(0, 204, 102)
    logButton.BorderSizePixel = 0
    logButton.Parent = frame

    -- Анимация кнопки при наведении
    logButton.MouseEnter:Connect(function()
        logButton:TweenSize(UDim2.new(0, 220, 0, 55), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        logButton.BackgroundColor3 = Color3.fromRGB(0, 255, 136)
    end)

    logButton.MouseLeave:Connect(function()
        logButton:TweenSize(UDim2.new(0, 200, 0, 50), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        logButton.BackgroundColor3 = Color3.fromRGB(0, 204, 102)
    end)

    -- Кнопка для закрытия секундомера (в виде X)
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 40, 0, 40)
    closeButton.Position = UDim2.new(1, -45, 0, -15)
    closeButton.Text = "X"
    closeButton.TextSize = 24
    closeButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.BackgroundTransparency = 1
    closeButton.BorderSizePixel = 0
    closeButton.Parent = frame

    -- Добавляем плавное появление кнопки
    closeButton:TweenPosition(UDim2.new(1, -45, 0, -15), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)

    -- Инициализация секундомера
    local startTime = tick()  -- Время старта
    local running = true

    -- Обновление времени
    local function updateTime()
        while running do
            local elapsedTime = tick() - startTime
            timeLabel.Text = string.format("Time: %.0fs", elapsedTime)
            task.wait(0.1)
        end
    end

    -- Функция для логирования текущего времени в консоль
    logButton.MouseButton1Click:Connect(function()
        local currentTime = tick() - startTime
        print("Current time: " .. currentTime .. " seconds")
    end)

    -- Функция для закрытия секундомера
    closeButton.MouseButton1Click:Connect(function()
        running = false
        screenGui:Destroy()  -- Удаляем GUI
    end)

    -- Запуск обновления времени
    updateTime()
end

local function sendStatistics(playerName, countGame, timeElapsed)
    local data = {
        content = "", -- Основное сообщение (если нужно)
        embeds = {{
            title = playerName,
            description = "",
            type = "rich",
            color = 0x2ce8b3, -- Цвет в десятичной системе (белый)
            fields = {
                {
                    name = "Игр сыграно",
                    value = countGame,
                    inline = true
                },
                {
                    name = "Гемы",
                    value = countGame*210,
                    inline = true
                },
                {
                    name = "Коины",
                    value = countGame*315,
                    inline = true
                },
                {
                    name = "Время работы",
                    value = timeElapsed
                }
            }
        }}
    }

    -- Кодирование данных в JSON (если нужно)
    local jsonData = HttpService:JSONEncode(data)

    -- Отправка POST-запроса
    local response = request({
        Url = Webhook_URL, -- URL вебхука
        Method = "POST", -- Метод запроса
        Headers = {
            ["Content-Type"] = "application/json" -- Указываем тип содержимого
        },
        Body = jsonData -- Тело запроса
    })

    -- Проверка ответа
    if response.Success then
    else
        warn("Ошибка отправки сообщения:", response.StatusCode, response.StatusMessage)
    end
end

local function placeTower(towerName, position)
    local towerPlacementService = game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("_Index"):WaitForChild("rudolph101_tower-defence-towers@0.2.1"):WaitForChild("tower-defence-towers"):WaitForChild("Shared"):WaitForChild("TowerPlacement"):WaitForChild("__comm__"):WaitForChild("RF"):WaitForChild("deploy")
    towerPlacementService:InvokeServer(towerName, position)
end

local function upgradeAllTowers(duration, delay)
    local towers = workspace:WaitForChild("Towers") -- Папка с башнями
    local startTime = tick() -- Время начала выполнения

    while tick() - startTime < duration do
        for _, tower in ipairs(towers:GetChildren()) do
            -- Прокачка каждой башни
            game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("_Index"):WaitForChild("rudolph101_tower-defence-towers@0.2.1"):WaitForChild("tower-defence-towers"):WaitForChild("Shared"):WaitForChild("TowerPlacement"):WaitForChild("__comm__"):WaitForChild("RF"):WaitForChild("upgrade"):InvokeServer(tower.Name)
            task.wait(delay) -- Задержка между апгрейдами
            if gameOver == true then break end
        end
    end
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local remoteEvent = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("GameOver")

local isEventConnected = false -- Флаг для проверки подключения обработчика

if not isEventConnected then
    isEventConnected = true
    remoteEvent.OnClientEvent:Connect(function(...)
        print("Событие GameOver вызвано с параметрами:", ...)
        task.wait(3)
        gameOver = true
    end)
end

local function runScript(mapName)
            local startTime = os.time()
            local function rebootGame(args)
                print("Перезапуск игры")
                gameOver = false
                task.wait(2)
                game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                task.wait(5)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбор карты
                task.wait(10)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3) -- Выбор сложности
            end
            if mapName == "Hero" then
                print("Запуск карты Hero")
                local args = {
                    "HeroHQ",
                    {
                        InfiniteMode = false,
                        Level = 1
                    }
                }
                if playerName == "zxcbillionairecxz" then
                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieGoldenMight",
                        [2] = "Death SingerEternalGlory",
                        [3] = "Mr Frost TowerForceOfNature",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(35,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                    print("Внеплановая остановка игры, перезапуск скрипта.")
                    task.wait(5)
                    game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                    task.wait(5)
                    runScript(mapName)
                elseif playerName == "grixhting" then

                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieEternalGlory",
                        [2] = "Death SingerEternalGlory",
                        [3] = "Mr Frost TowerEternalGlory",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(65,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                elseif playerName == "JarjoniMorjoni" then

                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieFortuneBreaker",
                        [2] = "Death SingerEternalGlory",
                        [3] = "Mr Frost TowerEternalGlory",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(65,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                    print("Внеплановая остановка игры, перезапуск скрипта.")
                    task.wait(5)
                    game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                    task.wait(5)
                    runScript(mapName)
                elseif playerName == "realmadridic" then

                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieGoldenMight",
                        [2] = "Death SingerEternalGlory",
                        [3] = "Mr Frost TowerForceOfNature",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(65,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                    print("Внеплановая остановка игры, перезапуск скрипта.")
                    task.wait(5)
                    game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                    task.wait(5)
                    runScript(mapName)
                elseif playerName == "4br4c4d4br" then


                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieGoldenMight",
                        [2] = "Galaxia DragonEternalGlory",
                        [3] = "Mr Frost TowerForceOfNature",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(65,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                    print("Внеплановая остановка игры, перезапуск скрипта.")
                    task.wait(5)
                    game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                    task.wait(5)
                    runScript(mapName)
                elseif playerName == "sugarcandy542" then

                    local positions = {
                        [1] = Vector3.new(-2, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [2] = Vector3.new(-24, 199.39999389648438, 188.89999389648438), -- Fire Genie
                        [3] = Vector3.new(0.899999618530273, 209.39999389648438, 150.60000610351562), -- Death Singer
                        [4] = Vector3.new(5, 203, 214.36999389648438), -- Mr Frost
                        [5] = Vector3.new(15, 203, 214.36999389648438), -- Mr Frost
                        [6] = Vector3.new(-5, 203, 214.36999389648438), -- Mr Frost
                        [7] = Vector3.new(12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [8] = Vector3.new(-12.180001525878906, 214.39999389648438, 111.36999389648438), -- Air Serpent
                        [9] = Vector3.new(-5.180001525878906, 214.39999389648438, 90.36999389648438), -- Air Serpent
                        [10] = Vector3.new(-27.100000381469727, 212.89999389648438, 103.5999984741211), -- Cosmic Rex
                    }

                    local towerNames = {
                        [1] = "Fire GenieFortuneBreaker",
                        [2] = "Death SingerEternalGlory",
                        [3] = "Mr Frost TowerForceOfNature",
                        [4] = "AirSerpentAlmightyEye",
                        [5] = "Cosmic RexEternalGlory",
                    }
                    
                    print("Пикаю карту")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(unpack(args)) -- Выбираем карту
                    task.wait(10)
                    print("Выбираю сложность")
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("rudolph101_voting-system@0.1.11"):WaitForChild("voting-system"):WaitForChild("__comm__"):WaitForChild("RE"):WaitForChild("Vote"):FireServer(3)
                    while true do
                        print("Началась игра " .. tostring(countGame))
                        task.wait(3)
                        local endTime = os.time()
                        local elapsedSeconds = endTime - startTime
                        -- Игра началась
                        local hours = math.floor(elapsedSeconds / 3600)
                        local minutes = math.floor((elapsedSeconds % 3600) / 60)
                        local seconds = elapsedSeconds % 60
                        local formattedTime = string.format("%02d:%02d:%02d", hours, minutes, seconds)
                        sendStatistics(playerName, countGame, formattedTime)
                        print("Первая башня")
                        placeTower(towerNames[1],positions[1])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[1],positions[2])
                        upgradeAllTowers(11,0.7)
                        task.wait(1)

                        placeTower(towerNames[2], positions[3])
                        task.wait(1)
                        upgradeAllTowers(65,0.5)
                        task.wait(1)

                        placeTower(towerNames[3],positions[4])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[5])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[3],positions[6])
                        upgradeAllTowers(32,0.4)

                        placeTower(towerNames[4],positions[7])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[8])
                        task.wait(1)
                        if gameOver == true then break end
                        placeTower(towerNames[4],positions[9])
                        task.wait(5)
                        if gameOver == true then break end
                        upgradeAllTowers(25,0.3)

                        placeTower(towerNames[5],positions[10])
                        upgradeAllTowers(40,0.3)

                        while gameOver == false do
                            task.wait(1)
                        end

                        task.wait(3)
                        countGame = countGame + 1
                        rebootGame(args)
                    end
                    print("Внеплановая остановка игры, перезапуск скрипта.")
                    task.wait(5)
                    game:GetService("ReplicatedStorage"):WaitForChild("SharedModules"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GameOverOptionsService"):WaitForChild("RF"):WaitForChild("voteAgain"):InvokeServer() -- Нажатие кнопки "Play Again"
                    task.wait(5)
                    runScript(mapName)
                else
                    print("unknown")
                end

            elseif mapName == "Anime" then 
            end
end

local function gui()
    local character = player.Character or player.CharacterAdded:wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Создаем GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = playerGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 200, 0, 250) -- Компактное меню
    frame.Position = UDim2.new(1, -220, 0.5, -125) -- В правой части экрана
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    frame.BackgroundTransparency = 0.1
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    -- Заголовок меню
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundTransparency = 1
    title.Text = "Меню"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Parent = frame

    -- Функция для создания кнопок
    local function createButton(name, text, row, col)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Text = text
        button.Size = UDim2.new(0.4, 0, 0, 40) -- Компактные кнопки
        button.Position = UDim2.new(0.1 + 0.5 * (col - 1), 0, 0, 50 + (row - 1) * 50) -- Два столбца кнопок
        button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.Gotham
        button.TextSize = 14
        button.Parent = frame

        return button
    end

    -- Функция для обработки нажатий
    local function onButtonClick(buttonIndex)
        print("Нажата кнопка: " .. buttonIndex)

        if buttonIndex == 1 then
            runScript("Hero")
        elseif buttonIndex == 2 then
            humanoidRootPart.CFrame = CFrame.new(Vector3.new(7350.33, -264, 8874.47))
        elseif buttonIndex == 3 then
            print("Действие для кнопки 3")
        elseif buttonIndex == 4 then
            print("Действие для кнопки 4")
        elseif buttonIndex == 5 then
            timer()
        elseif buttonIndex == 6 then
            local position = humanoidRootPart.Position
            print(position)
        end
    end

    -- Создаем 6 кнопок в два ряда
    local buttonNames = { -- Задаём названия кнопок
        "HeroStart",
        "HeroTP",
        "-",
        "-",
        "Timer",
        "GetPos"
    }

    local buttonIndex = 1
    for row = 1, 3 do
        for col = 1, 2 do
            if buttonIndex <= #buttonNames then
                local currentIndex = buttonIndex -- Локальная переменная для захвата индекса
                local button = createButton("Button" .. currentIndex, buttonNames[currentIndex], row, col)

                -- Привязываем обработчик клика
                button.MouseButton1Click:Connect(function()
                    onButtonClick(currentIndex) -- Используем локальную переменную
                end)

                buttonIndex += 1
            end
        end
    end



    -- Кнопка закрытия
    local closeButton = Instance.new("TextButton")
    closeButton.Text = "Закрыть"
    closeButton.Size = UDim2.new(0.8, 0, 0, 40)
    closeButton.Position = UDim2.new(0.1, 0, 1, -50) -- Внизу меню
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.Gotham
    closeButton.TextSize = 14
    closeButton.Parent = frame

    -- Событие закрытия
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
end

local votingScreen = playerGui:FindFirstChild("VoitingScreen")
if votingScreen then 
    gui() 
    else gui()
end
